<?php

declare (strict_types=1);
namespace ApiClients\Client\PetStore\Internal;

use ApiClients\Client\PetStore\Contract;
use ApiClients\Client\PetStore\Error as ErrorSchemas;
use ApiClients\Client\PetStore\Internal;
use ApiClients\Client\PetStore\Operation;
use ApiClients\Client\PetStore\Schema;
use League\OpenAPIValidation;
use React\Http;
use ApiClients\Contracts;
final class Operators
{
    private ?Internal\Operator\Pets\List_ $petsðŸ‘·List_ = null;
    private ?Internal\Operator\Pets\ListListing $petsðŸ‘·ListListing = null;
    private ?Internal\Operator\Pets\Create $petsðŸ‘·Create = null;
    private ?Internal\Operator\Pets\List_\Gatos $petsðŸ‘·List_ðŸ‘·Gatos = null;
    private ?Internal\Operator\Pets\List_\GatosListing $petsðŸ‘·List_ðŸ‘·GatosListing = null;
    private ?Internal\Operator\Pets\Kinds\Walking $petsðŸ‘·KindsðŸ‘·Walking = null;
    private ?Internal\Operator\Pets\Kinds\WalkingListing $petsðŸ‘·KindsðŸ‘·WalkingListing = null;
    private ?Internal\Operator\Pets\Grouped\By\Type $petsðŸ‘·GroupedðŸ‘·ByðŸ‘·Type = null;
    private ?Internal\Operator\Pets\Names $petsðŸ‘·Names = null;
    private ?Internal\Operator\Pets\NamesListing $petsðŸ‘·NamesListing = null;
    private ?Internal\Operator\ShowPetById $showPetById = null;
    public function __construct(private \ApiClients\Contracts\HTTP\Headers\AuthenticationInterface $authentication, private \React\Http\Browser $browser, private \League\OpenAPIValidation\Schema\SchemaValidator $requestSchemaValidator, private \League\OpenAPIValidation\Schema\SchemaValidator $responseSchemaValidator, private Internal\Hydrators $hydrators)
    {
    }
    public function petsðŸ‘·List_() : Internal\Operator\Pets\List_
    {
        if ($this->petsðŸ‘·List_ instanceof Internal\Operator\Pets\List_ === false) {
            $this->petsðŸ‘·List_ = new Internal\Operator\Pets\List_($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€Pets());
        }
        return $this->petsðŸ‘·List_;
    }
    public function petsðŸ‘·ListListing() : Internal\Operator\Pets\ListListing
    {
        if ($this->petsðŸ‘·ListListing instanceof Internal\Operator\Pets\ListListing === false) {
            $this->petsðŸ‘·ListListing = new Internal\Operator\Pets\ListListing($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€Pets());
        }
        return $this->petsðŸ‘·ListListing;
    }
    public function petsðŸ‘·Create() : Internal\Operator\Pets\Create
    {
        if ($this->petsðŸ‘·Create instanceof Internal\Operator\Pets\Create === false) {
            $this->petsðŸ‘·Create = new Internal\Operator\Pets\Create($this->browser, $this->authentication, $this->requestSchemaValidator, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€Pets());
        }
        return $this->petsðŸ‘·Create;
    }
    public function petsðŸ‘·List_ðŸ‘·Gatos() : Internal\Operator\Pets\List_\Gatos
    {
        if ($this->petsðŸ‘·List_ðŸ‘·Gatos instanceof Internal\Operator\Pets\List_\Gatos === false) {
            $this->petsðŸ‘·List_ðŸ‘·Gatos = new Internal\Operator\Pets\List_\Gatos($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€Gatos());
        }
        return $this->petsðŸ‘·List_ðŸ‘·Gatos;
    }
    public function petsðŸ‘·List_ðŸ‘·GatosListing() : Internal\Operator\Pets\List_\GatosListing
    {
        if ($this->petsðŸ‘·List_ðŸ‘·GatosListing instanceof Internal\Operator\Pets\List_\GatosListing === false) {
            $this->petsðŸ‘·List_ðŸ‘·GatosListing = new Internal\Operator\Pets\List_\GatosListing($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€Gatos());
        }
        return $this->petsðŸ‘·List_ðŸ‘·GatosListing;
    }
    public function petsðŸ‘·KindsðŸ‘·Walking() : Internal\Operator\Pets\Kinds\Walking
    {
        if ($this->petsðŸ‘·KindsðŸ‘·Walking instanceof Internal\Operator\Pets\Kinds\Walking === false) {
            $this->petsðŸ‘·KindsðŸ‘·Walking = new Internal\Operator\Pets\Kinds\Walking($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€KindsðŸŒ€Walking());
        }
        return $this->petsðŸ‘·KindsðŸ‘·Walking;
    }
    public function petsðŸ‘·KindsðŸ‘·WalkingListing() : Internal\Operator\Pets\Kinds\WalkingListing
    {
        if ($this->petsðŸ‘·KindsðŸ‘·WalkingListing instanceof Internal\Operator\Pets\Kinds\WalkingListing === false) {
            $this->petsðŸ‘·KindsðŸ‘·WalkingListing = new Internal\Operator\Pets\Kinds\WalkingListing($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€KindsðŸŒ€Walking());
        }
        return $this->petsðŸ‘·KindsðŸ‘·WalkingListing;
    }
    public function petsðŸ‘·GroupedðŸ‘·ByðŸ‘·Type() : Internal\Operator\Pets\Grouped\By\Type
    {
        if ($this->petsðŸ‘·GroupedðŸ‘·ByðŸ‘·Type instanceof Internal\Operator\Pets\Grouped\By\Type === false) {
            $this->petsðŸ‘·GroupedðŸ‘·ByðŸ‘·Type = new Internal\Operator\Pets\Grouped\By\Type($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€GroupedByType());
        }
        return $this->petsðŸ‘·GroupedðŸ‘·ByðŸ‘·Type;
    }
    public function petsðŸ‘·Names() : Internal\Operator\Pets\Names
    {
        if ($this->petsðŸ‘·Names instanceof Internal\Operator\Pets\Names === false) {
            $this->petsðŸ‘·Names = new Internal\Operator\Pets\Names($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€Names());
        }
        return $this->petsðŸ‘·Names;
    }
    public function petsðŸ‘·NamesListing() : Internal\Operator\Pets\NamesListing
    {
        if ($this->petsðŸ‘·NamesListing instanceof Internal\Operator\Pets\NamesListing === false) {
            $this->petsðŸ‘·NamesListing = new Internal\Operator\Pets\NamesListing($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€Names());
        }
        return $this->petsðŸ‘·NamesListing;
    }
    public function showPetById() : Internal\Operator\ShowPetById
    {
        if ($this->showPetById instanceof Internal\Operator\ShowPetById === false) {
            $this->showPetById = new Internal\Operator\ShowPetById($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€PetId());
        }
        return $this->showPetById;
    }
}
