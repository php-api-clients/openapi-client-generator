<?php

declare (strict_types=1);
namespace ApiClients\Client\PetStore;

use ApiClients\Client\PetStore\Error as ErrorSchemas;
use ApiClients\Client\PetStore\Hydrator;
use ApiClients\Client\PetStore\Operation;
use ApiClients\Client\PetStore\Operator;
use ApiClients\Client\PetStore\Schema;
use ApiClients\Client\PetStore\WebHook;
use ApiClients\Client\PetStore\Router;
use League\OpenAPIValidation;
use React\Http;
use ApiClients\Contracts;
final class Operators
{
    private ?Operator\Pets\List_ $petsðŸ‘·List_ = null;
    private ?Operator\Pets\ListListing $petsðŸ‘·ListListing = null;
    private ?Operator\Pets\Create $petsðŸ‘·Create = null;
    private ?Operator\Pets\List_\Gatos $petsðŸ‘·List_ðŸ‘·Gatos = null;
    private ?Operator\Pets\List_\GatosListing $petsðŸ‘·List_ðŸ‘·GatosListing = null;
    private ?Operator\Pets\Names $petsðŸ‘·Names = null;
    private ?Operator\Pets\NamesListing $petsðŸ‘·NamesListing = null;
    private ?Operator\ShowPetById $showPetById = null;
    public function __construct(private \ApiClients\Contracts\HTTP\Headers\AuthenticationInterface $authentication, private \React\Http\Browser $browser, private \League\OpenAPIValidation\Schema\SchemaValidator $requestSchemaValidator, private \League\OpenAPIValidation\Schema\SchemaValidator $responseSchemaValidator, private Hydrators $hydrators)
    {
    }
    public function petsðŸ‘·List_() : Operator\Pets\List_
    {
        if ($this->petsðŸ‘·List_ instanceof Operator\Pets\List_ === false) {
            $this->petsðŸ‘·List_ = new Operator\Pets\List_($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€Pets());
        }
        return $this->petsðŸ‘·List_;
    }
    public function petsðŸ‘·ListListing() : Operator\Pets\ListListing
    {
        if ($this->petsðŸ‘·ListListing instanceof Operator\Pets\ListListing === false) {
            $this->petsðŸ‘·ListListing = new Operator\Pets\ListListing($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€Pets());
        }
        return $this->petsðŸ‘·ListListing;
    }
    public function petsðŸ‘·Create() : Operator\Pets\Create
    {
        if ($this->petsðŸ‘·Create instanceof Operator\Pets\Create === false) {
            $this->petsðŸ‘·Create = new Operator\Pets\Create($this->browser, $this->authentication, $this->requestSchemaValidator, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€Pets());
        }
        return $this->petsðŸ‘·Create;
    }
    public function petsðŸ‘·List_ðŸ‘·Gatos() : Operator\Pets\List_\Gatos
    {
        if ($this->petsðŸ‘·List_ðŸ‘·Gatos instanceof Operator\Pets\List_\Gatos === false) {
            $this->petsðŸ‘·List_ðŸ‘·Gatos = new Operator\Pets\List_\Gatos($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€Gatos());
        }
        return $this->petsðŸ‘·List_ðŸ‘·Gatos;
    }
    public function petsðŸ‘·List_ðŸ‘·GatosListing() : Operator\Pets\List_\GatosListing
    {
        if ($this->petsðŸ‘·List_ðŸ‘·GatosListing instanceof Operator\Pets\List_\GatosListing === false) {
            $this->petsðŸ‘·List_ðŸ‘·GatosListing = new Operator\Pets\List_\GatosListing($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€Gatos());
        }
        return $this->petsðŸ‘·List_ðŸ‘·GatosListing;
    }
    public function petsðŸ‘·Names() : Operator\Pets\Names
    {
        if ($this->petsðŸ‘·Names instanceof Operator\Pets\Names === false) {
            $this->petsðŸ‘·Names = new Operator\Pets\Names($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€Names());
        }
        return $this->petsðŸ‘·Names;
    }
    public function petsðŸ‘·NamesListing() : Operator\Pets\NamesListing
    {
        if ($this->petsðŸ‘·NamesListing instanceof Operator\Pets\NamesListing === false) {
            $this->petsðŸ‘·NamesListing = new Operator\Pets\NamesListing($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€Names());
        }
        return $this->petsðŸ‘·NamesListing;
    }
    public function showPetById() : Operator\ShowPetById
    {
        if ($this->showPetById instanceof Operator\ShowPetById === false) {
            $this->showPetById = new Operator\ShowPetById($this->browser, $this->authentication, $this->responseSchemaValidator, $this->hydrators->getObjectMapperOperationðŸŒ€PetsðŸŒ€PetId());
        }
        return $this->showPetById;
    }
}
